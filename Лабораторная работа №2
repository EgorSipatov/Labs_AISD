"""
Лабораторная работа №2
Написать программу, решающую задачу из 1 лабораторной работы (в соответствии со своим вариантом) со следующими изменениями:
1.  Входной файл является обыкновенным (т.е. нет требования на «бесконечность» файла);
2.  Распознавание и обработку делать  через регулярные выражения;
3.  В вариантах, где есть параметр (например К), допускается его заменить на любое число;
4.  Все остальные требования соответствуют варианту задания лабораторной работы №1.
Вариант 23.
Натуральные четные числа, начинающиеся с нечетной цифры и содержащие не более 3 нечетных цифр.
Для каждого числа через тире вывести прописью первую цифру и нечетные цифры.
"""
import re

# Функция для перевода цифр в слова
def digit_to_word(digit):
    words = ["ноль", "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"]
    return words[int(digit)]

def process_numbers(filename):
    try:
        with open(filename, 'r') as file:
            # Чтение строк из файла
            numbers = file.readlines()

            # Проверка на пустоту файла
            if not numbers:
                print("Файл пуст!")
                return

            # Регулярное выражение для нахождения четных чисел, начинающихся с нечетной цифры
            pattern = re.compile(r'^[13579]\d*[02468]$')
            # $ - конец строоки

            for line in numbers:
                line = line.strip()
                # Разделяем строку на части, чтобы обработать каждую
                parts = line.split()

                for number in parts:
                    # Проверка на соответствие шаблону и количеству нечетных цифр
                    if pattern.match(number) and len(re.findall(r'[13579]', number)) <= 3:
                        odd_digits = re.findall(r'[13579]', number)
                        first_digit = digit_to_word(number[0])
                        odd_digits_words = " - ".join(digit_to_word(digit) for digit in odd_digits)
                        print(f"Число {number}: {first_digit} - {odd_digits_words}")

    except FileNotFoundError:
        print("Файл отсутствует!")
    except Exception as e:
        print(f"Произошла ошибка: {e}")

if __name__ == "__main__":
    process_numbers('lab1.txt')
